// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "CommonMessagePost.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace  ::mavlink::thrift;

class CommonMessagePostHandler : virtual public CommonMessagePostIf {
 public:
  CommonMessagePostHandler() {
    // Your initialization goes here
  }

  void postHeartbeat(const Heartbeat& msg) {
    // Your implementation goes here
    printf("postHeartbeat\n");
  }

  void postSysStatus(const SysStatus& msg) {
    // Your implementation goes here
    printf("postSysStatus\n");
  }

  void postSystemTime(const SystemTime& msg) {
    // Your implementation goes here
    printf("postSystemTime\n");
  }

  void postPing(const Ping& msg) {
    // Your implementation goes here
    printf("postPing\n");
  }

  void postChangeOperatorControl(const ChangeOperatorControl& msg) {
    // Your implementation goes here
    printf("postChangeOperatorControl\n");
  }

  void postChangeOperatorControlAck(const ChangeOperatorControlAck& msg) {
    // Your implementation goes here
    printf("postChangeOperatorControlAck\n");
  }

  void postAuthKey(const AuthKey& msg) {
    // Your implementation goes here
    printf("postAuthKey\n");
  }

  void postSetMode(const SetMode& msg) {
    // Your implementation goes here
    printf("postSetMode\n");
  }

  void postParamRequestRead(const ParamRequestRead& msg) {
    // Your implementation goes here
    printf("postParamRequestRead\n");
  }

  void postParamRequestList(const ParamRequestList& msg) {
    // Your implementation goes here
    printf("postParamRequestList\n");
  }

  void postParamValue(const ParamValue& msg) {
    // Your implementation goes here
    printf("postParamValue\n");
  }

  void postParamSet(const ParamSet& msg) {
    // Your implementation goes here
    printf("postParamSet\n");
  }

  void postGpsRawInt(const GpsRawInt& msg) {
    // Your implementation goes here
    printf("postGpsRawInt\n");
  }

  void postGpsStatus(const GpsStatus& msg) {
    // Your implementation goes here
    printf("postGpsStatus\n");
  }

  void postScaledImu(const ScaledImu& msg) {
    // Your implementation goes here
    printf("postScaledImu\n");
  }

  void postRawImu(const RawImu& msg) {
    // Your implementation goes here
    printf("postRawImu\n");
  }

  void postRawPressure(const RawPressure& msg) {
    // Your implementation goes here
    printf("postRawPressure\n");
  }

  void postScaledPressure(const ScaledPressure& msg) {
    // Your implementation goes here
    printf("postScaledPressure\n");
  }

  void postAttitude(const Attitude& msg) {
    // Your implementation goes here
    printf("postAttitude\n");
  }

  void postAttitudeQuaternion(const AttitudeQuaternion& msg) {
    // Your implementation goes here
    printf("postAttitudeQuaternion\n");
  }

  void postLocalPositionNed(const LocalPositionNed& msg) {
    // Your implementation goes here
    printf("postLocalPositionNed\n");
  }

  void postGlobalPositionInt(const GlobalPositionInt& msg) {
    // Your implementation goes here
    printf("postGlobalPositionInt\n");
  }

  void postRcChannelsScaled(const RcChannelsScaled& msg) {
    // Your implementation goes here
    printf("postRcChannelsScaled\n");
  }

  void postRcChannelsRaw(const RcChannelsRaw& msg) {
    // Your implementation goes here
    printf("postRcChannelsRaw\n");
  }

  void postServoOutputRaw(const ServoOutputRaw& msg) {
    // Your implementation goes here
    printf("postServoOutputRaw\n");
  }

  void postMissionRequestPartialList(const MissionRequestPartialList& msg) {
    // Your implementation goes here
    printf("postMissionRequestPartialList\n");
  }

  void postMissionWritePartialList(const MissionWritePartialList& msg) {
    // Your implementation goes here
    printf("postMissionWritePartialList\n");
  }

  void postMissionItem(const MissionItem& msg) {
    // Your implementation goes here
    printf("postMissionItem\n");
  }

  void postMissionRequest(const MissionRequest& msg) {
    // Your implementation goes here
    printf("postMissionRequest\n");
  }

  void postMissionSetCurrent(const MissionSetCurrent& msg) {
    // Your implementation goes here
    printf("postMissionSetCurrent\n");
  }

  void postMissionCurrent(const MissionCurrent& msg) {
    // Your implementation goes here
    printf("postMissionCurrent\n");
  }

  void postMissionRequestList(const MissionRequestList& msg) {
    // Your implementation goes here
    printf("postMissionRequestList\n");
  }

  void postMissionCount(const MissionCount& msg) {
    // Your implementation goes here
    printf("postMissionCount\n");
  }

  void postMissionClearAll(const MissionClearAll& msg) {
    // Your implementation goes here
    printf("postMissionClearAll\n");
  }

  void postMissionItemReached(const MissionItemReached& msg) {
    // Your implementation goes here
    printf("postMissionItemReached\n");
  }

  void postMissionAck(const MissionAck& msg) {
    // Your implementation goes here
    printf("postMissionAck\n");
  }

  void postSetGpsGlobalOrigin(const SetGpsGlobalOrigin& msg) {
    // Your implementation goes here
    printf("postSetGpsGlobalOrigin\n");
  }

  void postGpsGlobalOrigin(const GpsGlobalOrigin& msg) {
    // Your implementation goes here
    printf("postGpsGlobalOrigin\n");
  }

  void postSetLocalPositionSetpoint(const SetLocalPositionSetpoint& msg) {
    // Your implementation goes here
    printf("postSetLocalPositionSetpoint\n");
  }

  void postLocalPositionSetpoint(const LocalPositionSetpoint& msg) {
    // Your implementation goes here
    printf("postLocalPositionSetpoint\n");
  }

  void postGlobalPositionSetpointInt(const GlobalPositionSetpointInt& msg) {
    // Your implementation goes here
    printf("postGlobalPositionSetpointInt\n");
  }

  void postSetGlobalPositionSetpointInt(const SetGlobalPositionSetpointInt& msg) {
    // Your implementation goes here
    printf("postSetGlobalPositionSetpointInt\n");
  }

  void postSafetySetAllowedArea(const SafetySetAllowedArea& msg) {
    // Your implementation goes here
    printf("postSafetySetAllowedArea\n");
  }

  void postSafetyAllowedArea(const SafetyAllowedArea& msg) {
    // Your implementation goes here
    printf("postSafetyAllowedArea\n");
  }

  void postSetRollPitchYawThrust(const SetRollPitchYawThrust& msg) {
    // Your implementation goes here
    printf("postSetRollPitchYawThrust\n");
  }

  void postSetRollPitchYawSpeedThrust(const SetRollPitchYawSpeedThrust& msg) {
    // Your implementation goes here
    printf("postSetRollPitchYawSpeedThrust\n");
  }

  void postRollPitchYawThrustSetpoint(const RollPitchYawThrustSetpoint& msg) {
    // Your implementation goes here
    printf("postRollPitchYawThrustSetpoint\n");
  }

  void postRollPitchYawSpeedThrustSetpoint(const RollPitchYawSpeedThrustSetpoint& msg) {
    // Your implementation goes here
    printf("postRollPitchYawSpeedThrustSetpoint\n");
  }

  void postSetQuadMotorsSetpoint(const SetQuadMotorsSetpoint& msg) {
    // Your implementation goes here
    printf("postSetQuadMotorsSetpoint\n");
  }

  void postSetQuadSwarmRollPitchYawThrust(const SetQuadSwarmRollPitchYawThrust& msg) {
    // Your implementation goes here
    printf("postSetQuadSwarmRollPitchYawThrust\n");
  }

  void postNavControllerOutput(const NavControllerOutput& msg) {
    // Your implementation goes here
    printf("postNavControllerOutput\n");
  }

  void postSetQuadSwarmLedRollPitchYawThrust(const SetQuadSwarmLedRollPitchYawThrust& msg) {
    // Your implementation goes here
    printf("postSetQuadSwarmLedRollPitchYawThrust\n");
  }

  void postStateCorrection(const StateCorrection& msg) {
    // Your implementation goes here
    printf("postStateCorrection\n");
  }

  void postRequestDataStream(const RequestDataStream& msg) {
    // Your implementation goes here
    printf("postRequestDataStream\n");
  }

  void postDataStream(const DataStream& msg) {
    // Your implementation goes here
    printf("postDataStream\n");
  }

  void postManualControl(const ManualControl& msg) {
    // Your implementation goes here
    printf("postManualControl\n");
  }

  void postRcChannelsOverride(const RcChannelsOverride& msg) {
    // Your implementation goes here
    printf("postRcChannelsOverride\n");
  }

  void postVfrHud(const VfrHud& msg) {
    // Your implementation goes here
    printf("postVfrHud\n");
  }

  void postCommandLong(const CommandLong& msg) {
    // Your implementation goes here
    printf("postCommandLong\n");
  }

  void postCommandAck(const CommandAck& msg) {
    // Your implementation goes here
    printf("postCommandAck\n");
  }

  void postRollPitchYawRatesThrustSetpoint(const RollPitchYawRatesThrustSetpoint& msg) {
    // Your implementation goes here
    printf("postRollPitchYawRatesThrustSetpoint\n");
  }

  void postManualSetpoint(const ManualSetpoint& msg) {
    // Your implementation goes here
    printf("postManualSetpoint\n");
  }

  void postLocalPositionNedSystemGlobalOffset(const LocalPositionNedSystemGlobalOffset& msg) {
    // Your implementation goes here
    printf("postLocalPositionNedSystemGlobalOffset\n");
  }

  void postHilState(const HilState& msg) {
    // Your implementation goes here
    printf("postHilState\n");
  }

  void postHilControls(const HilControls& msg) {
    // Your implementation goes here
    printf("postHilControls\n");
  }

  void postHilRcInputsRaw(const HilRcInputsRaw& msg) {
    // Your implementation goes here
    printf("postHilRcInputsRaw\n");
  }

  void postOpticalFlow(const OpticalFlow& msg) {
    // Your implementation goes here
    printf("postOpticalFlow\n");
  }

  void postGlobalVisionPositionEstimate(const GlobalVisionPositionEstimate& msg) {
    // Your implementation goes here
    printf("postGlobalVisionPositionEstimate\n");
  }

  void postVisionPositionEstimate(const VisionPositionEstimate& msg) {
    // Your implementation goes here
    printf("postVisionPositionEstimate\n");
  }

  void postVisionSpeedEstimate(const VisionSpeedEstimate& msg) {
    // Your implementation goes here
    printf("postVisionSpeedEstimate\n");
  }

  void postViconPositionEstimate(const ViconPositionEstimate& msg) {
    // Your implementation goes here
    printf("postViconPositionEstimate\n");
  }

  void postHighresImu(const HighresImu& msg) {
    // Your implementation goes here
    printf("postHighresImu\n");
  }

  void postOmnidirectionalFlow(const OmnidirectionalFlow& msg) {
    // Your implementation goes here
    printf("postOmnidirectionalFlow\n");
  }

  void postFileTransferStart(const FileTransferStart& msg) {
    // Your implementation goes here
    printf("postFileTransferStart\n");
  }

  void postFileTransferDirList(const FileTransferDirList& msg) {
    // Your implementation goes here
    printf("postFileTransferDirList\n");
  }

  void postFileTransferRes(const FileTransferRes& msg) {
    // Your implementation goes here
    printf("postFileTransferRes\n");
  }

  void postBatteryStatus(const BatteryStatus& msg) {
    // Your implementation goes here
    printf("postBatteryStatus\n");
  }

  void postSetpoint8dof(const Setpoint8dof& msg) {
    // Your implementation goes here
    printf("postSetpoint8dof\n");
  }

  void postSetpoint6dof(const Setpoint6dof& msg) {
    // Your implementation goes here
    printf("postSetpoint6dof\n");
  }

  void postMemoryVect(const MemoryVect& msg) {
    // Your implementation goes here
    printf("postMemoryVect\n");
  }

  void postDebugVect(const DebugVect& msg) {
    // Your implementation goes here
    printf("postDebugVect\n");
  }

  void postNamedValueFloat(const NamedValueFloat& msg) {
    // Your implementation goes here
    printf("postNamedValueFloat\n");
  }

  void postNamedValueInt(const NamedValueInt& msg) {
    // Your implementation goes here
    printf("postNamedValueInt\n");
  }

  void postStatustext(const Statustext& msg) {
    // Your implementation goes here
    printf("postStatustext\n");
  }

  void postDebug(const Debug& msg) {
    // Your implementation goes here
    printf("postDebug\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  shared_ptr<CommonMessagePostHandler> handler(new CommonMessagePostHandler());
  shared_ptr<TProcessor> processor(new CommonMessagePostProcessor(handler));
  shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

