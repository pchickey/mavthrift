// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "CommonMessageFetch.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace  ::mavlink::thrift;

class CommonMessageFetchHandler : virtual public CommonMessageFetchIf {
 public:
  CommonMessageFetchHandler() {
    // Your initialization goes here
  }

  void availableMessages(std::map<CommonMessageTypes::type, int32_t> & _return) {
    // Your implementation goes here
    printf("availableMessages\n");
  }

  void fetchHeartbeat(std::vector<Heartbeat> & _return) {
    // Your implementation goes here
    printf("fetchHeartbeat\n");
  }

  void fetchSysStatus(std::vector<SysStatus> & _return) {
    // Your implementation goes here
    printf("fetchSysStatus\n");
  }

  void fetchSystemTime(std::vector<SystemTime> & _return) {
    // Your implementation goes here
    printf("fetchSystemTime\n");
  }

  void fetchPing(std::vector<Ping> & _return) {
    // Your implementation goes here
    printf("fetchPing\n");
  }

  void fetchChangeOperatorControl(std::vector<ChangeOperatorControl> & _return) {
    // Your implementation goes here
    printf("fetchChangeOperatorControl\n");
  }

  void fetchChangeOperatorControlAck(std::vector<ChangeOperatorControlAck> & _return) {
    // Your implementation goes here
    printf("fetchChangeOperatorControlAck\n");
  }

  void fetchAuthKey(std::vector<AuthKey> & _return) {
    // Your implementation goes here
    printf("fetchAuthKey\n");
  }

  void fetchSetMode(std::vector<SetMode> & _return) {
    // Your implementation goes here
    printf("fetchSetMode\n");
  }

  void fetchParamRequestRead(std::vector<ParamRequestRead> & _return) {
    // Your implementation goes here
    printf("fetchParamRequestRead\n");
  }

  void fetchParamRequestList(std::vector<ParamRequestList> & _return) {
    // Your implementation goes here
    printf("fetchParamRequestList\n");
  }

  void fetchParamValue(std::vector<ParamValue> & _return) {
    // Your implementation goes here
    printf("fetchParamValue\n");
  }

  void fetchParamSet(std::vector<ParamSet> & _return) {
    // Your implementation goes here
    printf("fetchParamSet\n");
  }

  void fetchGpsRawInt(std::vector<GpsRawInt> & _return) {
    // Your implementation goes here
    printf("fetchGpsRawInt\n");
  }

  void fetchGpsStatus(std::vector<GpsStatus> & _return) {
    // Your implementation goes here
    printf("fetchGpsStatus\n");
  }

  void fetchScaledImu(std::vector<ScaledImu> & _return) {
    // Your implementation goes here
    printf("fetchScaledImu\n");
  }

  void fetchRawImu(std::vector<RawImu> & _return) {
    // Your implementation goes here
    printf("fetchRawImu\n");
  }

  void fetchRawPressure(std::vector<RawPressure> & _return) {
    // Your implementation goes here
    printf("fetchRawPressure\n");
  }

  void fetchScaledPressure(std::vector<ScaledPressure> & _return) {
    // Your implementation goes here
    printf("fetchScaledPressure\n");
  }

  void fetchAttitude(std::vector<Attitude> & _return) {
    // Your implementation goes here
    printf("fetchAttitude\n");
  }

  void fetchAttitudeQuaternion(std::vector<AttitudeQuaternion> & _return) {
    // Your implementation goes here
    printf("fetchAttitudeQuaternion\n");
  }

  void fetchLocalPositionNed(std::vector<LocalPositionNed> & _return) {
    // Your implementation goes here
    printf("fetchLocalPositionNed\n");
  }

  void fetchGlobalPositionInt(std::vector<GlobalPositionInt> & _return) {
    // Your implementation goes here
    printf("fetchGlobalPositionInt\n");
  }

  void fetchRcChannelsScaled(std::vector<RcChannelsScaled> & _return) {
    // Your implementation goes here
    printf("fetchRcChannelsScaled\n");
  }

  void fetchRcChannelsRaw(std::vector<RcChannelsRaw> & _return) {
    // Your implementation goes here
    printf("fetchRcChannelsRaw\n");
  }

  void fetchServoOutputRaw(std::vector<ServoOutputRaw> & _return) {
    // Your implementation goes here
    printf("fetchServoOutputRaw\n");
  }

  void fetchMissionRequestPartialList(std::vector<MissionRequestPartialList> & _return) {
    // Your implementation goes here
    printf("fetchMissionRequestPartialList\n");
  }

  void fetchMissionWritePartialList(std::vector<MissionWritePartialList> & _return) {
    // Your implementation goes here
    printf("fetchMissionWritePartialList\n");
  }

  void fetchMissionItem(std::vector<MissionItem> & _return) {
    // Your implementation goes here
    printf("fetchMissionItem\n");
  }

  void fetchMissionRequest(std::vector<MissionRequest> & _return) {
    // Your implementation goes here
    printf("fetchMissionRequest\n");
  }

  void fetchMissionSetCurrent(std::vector<MissionSetCurrent> & _return) {
    // Your implementation goes here
    printf("fetchMissionSetCurrent\n");
  }

  void fetchMissionCurrent(std::vector<MissionCurrent> & _return) {
    // Your implementation goes here
    printf("fetchMissionCurrent\n");
  }

  void fetchMissionRequestList(std::vector<MissionRequestList> & _return) {
    // Your implementation goes here
    printf("fetchMissionRequestList\n");
  }

  void fetchMissionCount(std::vector<MissionCount> & _return) {
    // Your implementation goes here
    printf("fetchMissionCount\n");
  }

  void fetchMissionClearAll(std::vector<MissionClearAll> & _return) {
    // Your implementation goes here
    printf("fetchMissionClearAll\n");
  }

  void fetchMissionItemReached(std::vector<MissionItemReached> & _return) {
    // Your implementation goes here
    printf("fetchMissionItemReached\n");
  }

  void fetchMissionAck(std::vector<MissionAck> & _return) {
    // Your implementation goes here
    printf("fetchMissionAck\n");
  }

  void fetchSetGpsGlobalOrigin(std::vector<SetGpsGlobalOrigin> & _return) {
    // Your implementation goes here
    printf("fetchSetGpsGlobalOrigin\n");
  }

  void fetchGpsGlobalOrigin(std::vector<GpsGlobalOrigin> & _return) {
    // Your implementation goes here
    printf("fetchGpsGlobalOrigin\n");
  }

  void fetchSetLocalPositionSetpoint(std::vector<SetLocalPositionSetpoint> & _return) {
    // Your implementation goes here
    printf("fetchSetLocalPositionSetpoint\n");
  }

  void fetchLocalPositionSetpoint(std::vector<LocalPositionSetpoint> & _return) {
    // Your implementation goes here
    printf("fetchLocalPositionSetpoint\n");
  }

  void fetchGlobalPositionSetpointInt(std::vector<GlobalPositionSetpointInt> & _return) {
    // Your implementation goes here
    printf("fetchGlobalPositionSetpointInt\n");
  }

  void fetchSetGlobalPositionSetpointInt(std::vector<SetGlobalPositionSetpointInt> & _return) {
    // Your implementation goes here
    printf("fetchSetGlobalPositionSetpointInt\n");
  }

  void fetchSafetySetAllowedArea(std::vector<SafetySetAllowedArea> & _return) {
    // Your implementation goes here
    printf("fetchSafetySetAllowedArea\n");
  }

  void fetchSafetyAllowedArea(std::vector<SafetyAllowedArea> & _return) {
    // Your implementation goes here
    printf("fetchSafetyAllowedArea\n");
  }

  void fetchSetRollPitchYawThrust(std::vector<SetRollPitchYawThrust> & _return) {
    // Your implementation goes here
    printf("fetchSetRollPitchYawThrust\n");
  }

  void fetchSetRollPitchYawSpeedThrust(std::vector<SetRollPitchYawSpeedThrust> & _return) {
    // Your implementation goes here
    printf("fetchSetRollPitchYawSpeedThrust\n");
  }

  void fetchRollPitchYawThrustSetpoint(std::vector<RollPitchYawThrustSetpoint> & _return) {
    // Your implementation goes here
    printf("fetchRollPitchYawThrustSetpoint\n");
  }

  void fetchRollPitchYawSpeedThrustSetpoint(std::vector<RollPitchYawSpeedThrustSetpoint> & _return) {
    // Your implementation goes here
    printf("fetchRollPitchYawSpeedThrustSetpoint\n");
  }

  void fetchSetQuadMotorsSetpoint(std::vector<SetQuadMotorsSetpoint> & _return) {
    // Your implementation goes here
    printf("fetchSetQuadMotorsSetpoint\n");
  }

  void fetchSetQuadSwarmRollPitchYawThrust(std::vector<SetQuadSwarmRollPitchYawThrust> & _return) {
    // Your implementation goes here
    printf("fetchSetQuadSwarmRollPitchYawThrust\n");
  }

  void fetchNavControllerOutput(std::vector<NavControllerOutput> & _return) {
    // Your implementation goes here
    printf("fetchNavControllerOutput\n");
  }

  void fetchSetQuadSwarmLedRollPitchYawThrust(std::vector<SetQuadSwarmLedRollPitchYawThrust> & _return) {
    // Your implementation goes here
    printf("fetchSetQuadSwarmLedRollPitchYawThrust\n");
  }

  void fetchStateCorrection(std::vector<StateCorrection> & _return) {
    // Your implementation goes here
    printf("fetchStateCorrection\n");
  }

  void fetchRequestDataStream(std::vector<RequestDataStream> & _return) {
    // Your implementation goes here
    printf("fetchRequestDataStream\n");
  }

  void fetchDataStream(std::vector<DataStream> & _return) {
    // Your implementation goes here
    printf("fetchDataStream\n");
  }

  void fetchManualControl(std::vector<ManualControl> & _return) {
    // Your implementation goes here
    printf("fetchManualControl\n");
  }

  void fetchRcChannelsOverride(std::vector<RcChannelsOverride> & _return) {
    // Your implementation goes here
    printf("fetchRcChannelsOverride\n");
  }

  void fetchVfrHud(std::vector<VfrHud> & _return) {
    // Your implementation goes here
    printf("fetchVfrHud\n");
  }

  void fetchCommandLong(std::vector<CommandLong> & _return) {
    // Your implementation goes here
    printf("fetchCommandLong\n");
  }

  void fetchCommandAck(std::vector<CommandAck> & _return) {
    // Your implementation goes here
    printf("fetchCommandAck\n");
  }

  void fetchRollPitchYawRatesThrustSetpoint(std::vector<RollPitchYawRatesThrustSetpoint> & _return) {
    // Your implementation goes here
    printf("fetchRollPitchYawRatesThrustSetpoint\n");
  }

  void fetchManualSetpoint(std::vector<ManualSetpoint> & _return) {
    // Your implementation goes here
    printf("fetchManualSetpoint\n");
  }

  void fetchLocalPositionNedSystemGlobalOffset(std::vector<LocalPositionNedSystemGlobalOffset> & _return) {
    // Your implementation goes here
    printf("fetchLocalPositionNedSystemGlobalOffset\n");
  }

  void fetchHilState(std::vector<HilState> & _return) {
    // Your implementation goes here
    printf("fetchHilState\n");
  }

  void fetchHilControls(std::vector<HilControls> & _return) {
    // Your implementation goes here
    printf("fetchHilControls\n");
  }

  void fetchHilRcInputsRaw(std::vector<HilRcInputsRaw> & _return) {
    // Your implementation goes here
    printf("fetchHilRcInputsRaw\n");
  }

  void fetchOpticalFlow(std::vector<OpticalFlow> & _return) {
    // Your implementation goes here
    printf("fetchOpticalFlow\n");
  }

  void fetchGlobalVisionPositionEstimate(std::vector<GlobalVisionPositionEstimate> & _return) {
    // Your implementation goes here
    printf("fetchGlobalVisionPositionEstimate\n");
  }

  void fetchVisionPositionEstimate(std::vector<VisionPositionEstimate> & _return) {
    // Your implementation goes here
    printf("fetchVisionPositionEstimate\n");
  }

  void fetchVisionSpeedEstimate(std::vector<VisionSpeedEstimate> & _return) {
    // Your implementation goes here
    printf("fetchVisionSpeedEstimate\n");
  }

  void fetchViconPositionEstimate(std::vector<ViconPositionEstimate> & _return) {
    // Your implementation goes here
    printf("fetchViconPositionEstimate\n");
  }

  void fetchHighresImu(std::vector<HighresImu> & _return) {
    // Your implementation goes here
    printf("fetchHighresImu\n");
  }

  void fetchOmnidirectionalFlow(std::vector<OmnidirectionalFlow> & _return) {
    // Your implementation goes here
    printf("fetchOmnidirectionalFlow\n");
  }

  void fetchFileTransferStart(std::vector<FileTransferStart> & _return) {
    // Your implementation goes here
    printf("fetchFileTransferStart\n");
  }

  void fetchFileTransferDirList(std::vector<FileTransferDirList> & _return) {
    // Your implementation goes here
    printf("fetchFileTransferDirList\n");
  }

  void fetchFileTransferRes(std::vector<FileTransferRes> & _return) {
    // Your implementation goes here
    printf("fetchFileTransferRes\n");
  }

  void fetchBatteryStatus(std::vector<BatteryStatus> & _return) {
    // Your implementation goes here
    printf("fetchBatteryStatus\n");
  }

  void fetchSetpoint8dof(std::vector<Setpoint8dof> & _return) {
    // Your implementation goes here
    printf("fetchSetpoint8dof\n");
  }

  void fetchSetpoint6dof(std::vector<Setpoint6dof> & _return) {
    // Your implementation goes here
    printf("fetchSetpoint6dof\n");
  }

  void fetchMemoryVect(std::vector<MemoryVect> & _return) {
    // Your implementation goes here
    printf("fetchMemoryVect\n");
  }

  void fetchDebugVect(std::vector<DebugVect> & _return) {
    // Your implementation goes here
    printf("fetchDebugVect\n");
  }

  void fetchNamedValueFloat(std::vector<NamedValueFloat> & _return) {
    // Your implementation goes here
    printf("fetchNamedValueFloat\n");
  }

  void fetchNamedValueInt(std::vector<NamedValueInt> & _return) {
    // Your implementation goes here
    printf("fetchNamedValueInt\n");
  }

  void fetchStatustext(std::vector<Statustext> & _return) {
    // Your implementation goes here
    printf("fetchStatustext\n");
  }

  void fetchDebug(std::vector<Debug> & _return) {
    // Your implementation goes here
    printf("fetchDebug\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  shared_ptr<CommonMessageFetchHandler> handler(new CommonMessageFetchHandler());
  shared_ptr<TProcessor> processor(new CommonMessageFetchProcessor(handler));
  shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

